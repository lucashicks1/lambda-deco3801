openapi: 3.0.0
info:
  title: Lambda DB Handler
  version: 0.1.0
paths:
  /figurines:
    get:
      tags:
        - Figurines
      summary: Gets map of all users and their availability for that timeslot. 1 represents busy, 0 represents free
      description: |-
        Endpoint that determines whether a user is free or not

        Returns:
            dict: map, mapping a user to their status
      operationId: get_available_figurines_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get Available Figurines Get
                example:
                  - user_1: 0
                    user_2: 1
                    user_3: 0
                    user_4: 3
  /whiteboard/{user}:
    post:
      tags:
        - Whiteboard
      summary: Modify Calendar
      description: |-
        Endpoint that updates the calendar with information given to the image capture software.

        Raises:
            HTTPException: 400 status code if the user provided is not valid

        Returns:
            dict: added timeslots
      operationId: modify_calendar_whiteboard__user__post
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
            title: User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/WhiteboardRequest'
              example:
                - body:
                    - day: monday
                      time_slot: 0
                      data: captured text
                      colour: black
                    - day: tuesday
                      time_slot: 0
                      data: text
                      colour: black,red
              title: Payload
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                example:
                  - body:
                      - day: monday
                        time: '00:00'
                        slot_num: 0
                        booked_users:
                          - user_2
                          - user_3
                          - user_1
                      - day: tuesday
                        time: '00:00'
                        slot_num: 0
                        booked_users:
                          - user_1
                title: Response Modify Calendar Whiteboard  User  Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /display/user-totals:
    get:
      tags:
        - Display
      summary: Calculates the total number of booked hours for each user.
      description: |-
        Endpoint that returns the total number of booked hours for each user.

        Returns:
            dict: user booked hour totals
      operationId: get_user_hours_display_user_totals_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get User Hours Display User Totals Get
                example:
                  - user_1: 81.5
                    user_2: 85.25
                    user_3: 84.75
                    user_4: 79
  /display/family-timeslots:
    get:
      tags:
        - Display
      summary: Gets all of the timeslots that the family has booked in time for.
      description: |-
        Endpoint that returns all of the timeslots that the family has booked

        Returns:
            dict: calendar timeslots
      operationId: get_family_timeslots_display_family_timeslots_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get Family Timeslots Display Family Timeslots Get
                example:
                  - body:
                      - day: monday
                        time: '14:00'
                        slot_num: 56
                        booked_users:
                          - family
                          - user_2
                      - day: monday
                        time: '14:15'
                        slot_num: 57
                        booked_users:
                          - family
                      - day: monday
                        time: '14:30'
                        slot_num: 58
                        booked_users:
                          - family
                      - day: monday
                        time: '14:45'
                        slot_num: 59
                        booked_users:
                          - family
                      - day: tuesday
                        time: '15:00'
                        slot_num: 60
                        booked_users:
                          - family
                          - user_2
  /display/user-free-timeslots:
    get:
      tags:
        - Display
      summary: Gets the timeslots that have a certain number of free users.Each slot is sorted in descending order in terms of how many people are free during it
      description: |-
        Endpoint that gets timeslots with a given number of free users.

        Returns:
            dict: timeslots with a given number of free users
      operationId: get_free_timeslots_display_user_free_timeslots_get
      parameters:
        - name: min_num_users
          in: query
          required: false
          schema:
            type: integer
            maximum: 4
            minimum: 0
            title: The minimum number of available users
            default: 4
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                example:
                  - body:
                      - day: monday
                        time: '08:00'
                        slot_num: 32
                        booked_users: []
                        num_free_users: 4
                      - day: monday
                        time: '08:15'
                        slot_num: 33
                        booked_users: []
                        num_free_users: 4
                      - day: monday
                        time: '08:30'
                        slot_num: 34
                        booked_users: []
                        num_free_users: 4
                      - day: tuesday
                        time: '14:30'
                        slot_num: 58
                        booked_users:
                          - user_1
                        num_free_users: 3
                      - day: tuesday
                        time: '14:45'
                        slot_num: 59
                        booked_users:
                          - user_1
                        num_free_users: 3
                title: Response Get Free Timeslots Display User Free Timeslots Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /:
    get:
      summary: Default landing page which will redirect you to the docs
      description: root endpoint of the API that redirects to the API docs
      operationId: main__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /dump:
    get:
      summary: Private endpoint that is used to quickly dump the database contents
      description: |-
        Private endpoint solely used to dump the current contents of the database.
        Endpoint would not be public facing
      operationId: dump_dump_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /users:
    get:
      summary: Get Users
      description: Endpoint that retrieves the names of all the users in the database
      operationId: get_users_users_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /reset:
    post:
      summary: Resets the state of the database
      description: |-
        Resets the database if state is true

        Args:
            reset (bool, optional): Whether the database will be reset. Defaults to False.
            populate (bool, optional): Whether the database will be populated with random timeslots when reset
      operationId: reset_reset_post
      parameters:
        - name: reset
          in: query
          required: false
          schema:
            type: boolean
            default: false
            title: Reset
        - name: populate
          in: query
          required: false
          schema:
            type: boolean
            default: true
            title: Populate
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    TimeSlot:
      properties:
        day:
          type: string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
          title: Day
        time_slot:
          type: integer
          title: Time Slot
        data:
          type: string
          nullable: true
          title: Data
        colour:
          type: string
          nullable: true
          title: Colour
      type: object
      required:
        - day
        - time_slot
      title: TimeSlot
      description: Pydantic model used to validate each timeslot passed into the whiteboard endpoints
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
    WhiteboardRequest:
      properties:
        body:
          items:
            $ref: '#/components/schemas/TimeSlot'
          type: array
          title: Body
      type: object
      required:
        - body
      title: WhiteboardRequest
      description: Pydantic model used to validate payload passed into whiteboard endpoints
tags:
  - name: Display
    description: All endpoints used by the family display
  - name: Figurines
    description: All endpoints used by the figurines display
  - name: Whiteboard
    description: All endpoints used by the lambda board
